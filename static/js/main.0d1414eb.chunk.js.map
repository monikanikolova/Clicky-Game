{"version":3,"sources":["components/Card/Card.js","components/Title/Title.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","onClick","setClicked","id","className","alt","name","src","image","Title","children","Wrapper","correctGuesses","topScore","message","App","state","pictures","_this","clickedPicture","filter","match","clicked","setState","sort","b","Math","random","i","length","_this2","this","components_Wrapper_Wrapper","components_Title_Title","map","components_Card_Card","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"qgCAYeA,eATF,SAAAC,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMJ,EAAMK,WAAWL,EAAMM,KAAKC,UAAU,QACtDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCF9BC,EAFD,SAAAZ,GAAK,OAAMC,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAASP,EAAMa,WCGvCC,SAFC,SAAAd,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWP,EAAMa,mBCMrDE,EAAiB,EACjBC,EAAW,EACXC,EAAU,6BAyFCC,6MApFbC,MAAQ,CACNC,WACAL,iBACAC,WACAC,aAIFZ,WAAa,SAAAC,GAEX,IAAMc,EAAWC,EAAKF,MAAMC,SACtBE,EAAiBF,EAASG,OAAO,SAAAC,GAAK,OAAIA,EAAMlB,KAAOA,IAG7D,IAAkC,IAA9BgB,EAAe,GAAGG,QAEpBH,EAAe,GAAGG,SAAU,EAE5BR,EAAU,gBADVF,EAIqBC,IACnBA,EAAWD,EACXM,EAAKK,SAAS,CAAEV,cAElBI,EAASO,KAAK,SAACzB,EAAG0B,GAAQ,MAAO,GAAMC,KAAKC,WAE5CT,EAAKK,SAAS,CAAEN,aAChBC,EAAKK,SAAS,CAAEX,mBAChBM,EAAKK,SAAS,CAAET,gBAIb,CACHF,EAAiB,EACjBE,EAAU,+CAEV,IAAK,IAAIc,EAAI,EAAGA,EAAIX,EAASY,OAAQD,IACnCX,EAASW,GAAGN,SAAU,EAGxBJ,EAAKK,SAAS,CAAET,YAChBI,EAAKK,SAAS,CAAEX,mBAChBM,EAAKK,SAAS,CAAEN,uFAIX,IAAAa,EAAAC,KACP,OACEjC,EAAAC,EAAAC,cAACgC,EAAD,KACElC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAACiC,EAAD,0BAGAnC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,oFAIAN,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBACX2B,KAAKf,MAAMF,SAGdhB,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,UACU2B,KAAKf,MAAMJ,eADrB,2BACwDmB,KAAKf,MAAMH,YAMtEkB,KAAKf,MAAMC,SAASiB,IAAI,SAAAb,GAAK,OAC5BvB,EAAAC,EAAAC,cAACmC,EAAD,CACEjC,WAAY4B,EAAK5B,WACjBC,GAAIkB,EAAMlB,GACViC,IAAKf,EAAMlB,GACXK,MAAOa,EAAMb,kBA7EP6B,aCTlBC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0d1414eb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n    <div onClick={() => props.setClicked(props.id)} className=\"card\">\n        <div className=\"img-container\">\n            <img alt={props.name} src={props.image} />\n        </div>\n    </div>\n    \n    );\n    \nexport default Card;","import React from \"react\";\n\nconst Title = props => ( <h1 className=\"title\">{props.children}</h1> );\n\nexport default Title;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n\n","// Import React and components\nimport React, { Component } from 'react';\nimport './App.css';\nimport Card from \"./components/Card\";\nimport Title from \"./components/Title\";\nimport Wrapper from \"./components/Wrapper\";\nimport pictures from \"./pictures.json\";\n\n//Set up variables to track score and guesses\nlet correctGuesses = 0;\nlet topScore = 0;\nlet message = \"Click on a emoji to begin!\";\n\n\nclass App extends Component {\n\n  state = {\n    pictures,\n    correctGuesses,\n    topScore,\n    message\n  };\n\n\n  setClicked = id => {\n\n    const pictures = this.state.pictures;\n    const clickedPicture = pictures.filter(match => match.id === id);\n\n    // If picture was not clicked\n    if (clickedPicture[0].clicked === false) {\n\n      clickedPicture[0].clicked = true;\n      correctGuesses++;\n      message = \"You Got It!\";\n\n      // Handles the top score display\n      if (correctGuesses > topScore) {\n        topScore = correctGuesses;\n        this.setState({ topScore });\n      }\n      pictures.sort((a, b) => { return 0.5 - Math.random() });\n\n      this.setState({ pictures });\n      this.setState({ correctGuesses });\n      this.setState({ message });\n\n    }\n    // If picture was clicked\n    else {\n      correctGuesses = 0;\n      message = \"You already chose that emoji! Begin New Game\";\n\n      for (let i = 0; i < pictures.length; i++) {\n        pictures[i].clicked = false;\n      }\n\n      this.setState({ message });\n      this.setState({ correctGuesses });\n      this.setState({ pictures });\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <div className=\"heading shadow\">\n          <Title>\n            EMOJIS HAVING FUN\n            </Title>\n          <div className=\"scoreBoard\">\n            <h2 className=\"scoreSummary\">\n              Click on an image to earn points, but don't click on any of them more than once!\n                </h2>\n\n            <h3 className=\"scoreSummary\">\n              {this.state.message}\n            </h3>\n\n            <h3 className=\"scoreSummary\">\n              Score: {this.state.correctGuesses}   ï¸±   Best Score: {this.state.topScore}\n            </h3>\n\n          </div>\n        </div>\n\n        {this.state.pictures.map(match => (\n          <Card\n            setClicked={this.setClicked}\n            id={match.id}\n            key={match.id}\n            image={match.image}\n          />\n        ))}\n      </Wrapper>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}